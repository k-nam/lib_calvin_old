package test

import db._
import crawler._

 
object DbTest {

  
  def main(args: Array[String]): Unit = {   

    //println(getTotalLinks())
    //htmlCrawlerTest()  
    dbManagerTest()
    //removeSpaceInFriendsList  
  }
  
  def dbManagerTest() { 
    //val dbManager = new MysqlDbManager()
    var dbManagers = List[DbManager]()
    for (i <- 0 to 3) {
      dbManagers = new OracleDbManager()::dbManagers
    }
    for (dbManager <- dbManagers) {
      dbManager.start
    }
    
    
    //println(dbManager.getDesc("nkw0705"))
    //val test = "2009-12-11T02:00:59Z"
    //println (test)
    //println (dbManager.getOnlyDigits(test))
        
    

  }
    
  def getTotalLinks(): Int = {
    val dbManager = new MysqlDbManager()
    val idArray: Array[String] = dbManager.getPersonList()
    var sumTotal: Int = 0
    for (id <- idArray) {
      val thisPerson = dbManager.getPerson(id)
      thisPerson match {
        case Some(person) => sumTotal += person.friendsList.length
        case None =>
      }
    }
    return sumTotal
  }
  
  
  def removeSpaceInFriendsList() {
    val dbManager = new MysqlDbManager()
    val idList = dbManager.getPersonList()
    for (id <- idList) {
      val thisPerson = dbManager.getPerson(id)
      thisPerson match {
        case Some(person) => {
		      val friendsSet = Set[String]() ++ person.friendsList		      
		      if (friendsSet.contains("") == true) {
		        println(person.friendsList.length)
		        println(id + " had space!!")
		        person.friendsList = (friendsSet - "").toList.sort((x, y) => x < y)
		        dbManager.updatePerson(person)
		        println(person.friendsList)
		        println(person.friendsList.length)
            
		      } 
        }
        case None => {          
        }
      }
    }
  }
}
